Hashcat - World's fastest and most advanced password recovery utility 
Source: https://github.com/hashcat/hashcat

Usage:
  hashcat -a 0 -m 0 f806fc5a2a0d5ba2471600758452799c /usr/share/wordlists/rockyou.txt

Commands:
  hashcat -h                        List of supported hashes
  hashcat --show                    Show the cracked value if the hash has been cracked
  hashcat --help | grep NTLM        Check mode for NTLM hash

Options:
  -a 0                              Sets the attack mode to a dictionary attack
  -m 0                              Sets the hash mode for cracking MD5 hashes
  f806fc5a2a0d5ba2471600758452799c  This option could be a single hash like our example
                                    or a file that contains a hash or multiple hashes
  /usr/share/wordlists/rockyou.txt  Wordlist/dictionary file for our attack
  -a 3                              Sets the attacking mode as a brute-force attack
  ?d?d?d?d                          The "?d" tells hashcat to use a digit. In this case, 
                                    "?d?d?d?d" for four digits starting with "0000" and ending at "9999"
  --stdout                          Print the result to the terminal
  -O, --optimized-kernel-enable     Enable optimized kernels (limits password length)

Common hashtypes:
  5600 - NTLMv2-SSP

Informational:
  NEVER use "--force" for hashcat. It can lead to false positives 
  (wrong passwords being given to you) and false negatives (skips over the correct hash).

  DO NOT encrypt passwords unless you’re doing something like a password manager. 
  Passwords should not be stored in plaintext, and you should use hashing to manage them safely.

  When you connect to your bank, there’s a certificate that uses cryptography to prove that it is actually your bank rather than a hacker.

  When you download a file, how do you check if it downloaded right? You can use cryptography here to verify a checksum of the data.
