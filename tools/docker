Common Commands:
  pull                                 Pull all image service 
  run -dt --name <name> <image>        Start the container
  run -itd --rm -p 80:80 --name <name> nginx   Start the nginx image container and expose on port 80
  ps                                   See a list of all running containers
  ps -a                                See a list of all containers, even the ones not running
  stop <hash>                          Gracefully stop the specified container
  start <hash>                         Start the specified container
  kill <hash>                          Force shutdown of the specified container
  rm <hash>                            Remove the specified container from this machine
  rm -f <hash>                         Remove force specified container from this machine
  rm $(docker ps -a -q)                Remove all containers from this machine
  exec -it [container-id] bash         Enter a running container
  stats                                Show containers stats
  logs <container-id> -f               Live tail a container's logs
  login                                Log in this CLI session using your Docker credentials

Images:
  build -t friendlyname .              Create image using this directory's Dockerfile
  images -a                            Show all images on this machine
  rmi <imagename>                      Remove the specified image from this machine
  rmi $(docker images -q)              Remove all images from this machine
  tag <image> username/repository:tag  Tag <image> for upload to registry
  push username/repository:tag         Upload tagged image to registry
  run username/repository:tag          Run image from a registry

Network:
  network create <name>                Create new network bridge
  network ls                           list network bridges
  run -itd --rm --network <name> --name name nginx         Run on the new network
  run -p 4000:80 friendlyname          Run "friendlyname" mapping port 4000 to 80
  run -d -p 4000:80 friendlyname       Same thing, but in detached mode
  system prune                         Remove all unused containers, networks, images (both dangling and unreferenced), and optionally, volumes.
  system prune -a                      Remove all unused containers, networks, images not just dangling ones (Docker 17.06.1-ce and superior)
  volume prune                         Remove all unused local volumes
  network prune                        Remove all unused networks

Docker compose:
  compose up                               Create and start containers
  compose up -d                            Create and start containers in detached mode
  compose ps                               Show containers only within docker-compose environment
  compose down                             Stop and remove containers, networks, images, and volumes
  compose logs                             View output from containers
  compose restart                          Restart all service
  compose pull                             Pull all image service 
  compose build                            Build all image service
  compose config                           Validate and view the Compose file
  compose scale <service_name>=<replica>   Scale special service(s)
  compose top                              Display the running processes
  compose run -rm -p 2022:22 web bash      Start web service and runs bash as its command, remove old container.

Docker services:
  service create <options> <image> <command>    Create new service
  service inspect --pretty <service_name>       Display detailed information Service(s)
  service ls                                    List Services
  service ps                                    List the tasks of Services
  service scale <service_name>=<replica>        Scale special service(s)
  service update <options> <service_name>       Update Service options

Docker stack:
  stack ls                                   List all running applications on this Docker host
  stack deploy -c <composefile> <appname>    Run the specified Compose file
  stack services <appname>                   List the services associated with an app
  stack ps <appname>                         List the running containers associated with an app
  stack rm <appname>                         Tear down an application
